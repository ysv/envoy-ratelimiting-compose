admin:
  access_log_path: "/dev/stdout"
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 8001

static_resources:
  listeners:
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 80
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
          codec_type: auto
          stat_prefix: ingress_http
          route_config:
            name: local_route
            virtual_hosts:
            - name: backend
              domains:
              - "*"
              routes:
              - match:
                  prefix: "/service/1"
                route:
                  cluster: service1
              - match:
                  prefix: "/service/2"
                route:
                  cluster: service2
              rate_limits:
              - stage: 0
                actions:
                # https://www.envoyproxy.io/docs/envoy/latest/api-v2/api/v2/route/route_components.proto#route-ratelimit-action-headervaluematch
                - header_value_match:
                    descriptor_value: cf-ip-missing
                    expect_match: false
                    headers:
                    - name: "CF-Connecting-IP"
                      present_match: true

              - stage: 0
                actions:
                # https://www.envoyproxy.io/docs/envoy/latest/api-v2/api/v2/route/route_components.proto#route-ratelimit-action-requestheaders
                - request_headers:
                    header_name: "CF-Connecting-IP"
                    descriptor_key: cf-ip-address

#                - header_value_match:
#                    descriptor_value: cf-ip-whitelisted
#                    expect_match: true
#                    headers:
#                    - name: "CF-Connecting-IP"
#                      exact_match: "163.172.165.12"
#
#                # https://www.envoyproxy.io/docs/envoy/latest/api-v2/api/v2/route/route_components.proto#route-ratelimit-action-requestheaders
#                - request_headers:
#                    header_name: "CF-Connecting-IP"
#                    descriptor_key: ip-address
#                stage: 0
#              rate_limits:
#              - actions:
#                - header_value_match:
#                    descriptor_value: ip_missing
#                    expect_match: false
#                    headers:
#                      - name: "cf-connecting-ip"
#                        present_match: true
#
#                - header_value_match:
#                    descriptor_value: ip_whitelisted
#                    expect_match: true
#                    headers:
#                    - name: "cf-connecting-ip"
#                      exact_match: "163.172.165.12"
#
#                - request_headers:
#                    header_name: "cf-connecting-ip"
#                    descriptor_key: "ip_address"
#
#                ####
#                stage: 0
#                ####
          http_filters:
          - name: envoy.rate_limit
            config:
              domain: api
              stage: 0
              request_type: external
              failure_mode_deny: true
              rate_limit_service:
                grpc_service:
                  envoy_grpc:
                    cluster_name: ratelimit
          - name: envoy.router
            typed_config: {}
  clusters:
  - name: ratelimit
    type: strict_dns
    connect_timeout: 0.25s
    lb_policy: ROUND_ROBIN
    hosts: [{ socket_address: { address: ratelimit, port_value: 8081 }}]
    http2_protocol_options: {}

  - name: service1
    connect_timeout: 0.25s
    type: strict_dns
    dns_lookup_family: V4_ONLY
    lb_policy: round_robin
    load_assignment:
      cluster_name: service1
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: service1
                port_value: 8080
  - name: service2
    connect_timeout: 0.25s
    type: strict_dns
    dns_lookup_family: V4_ONLY
    lb_policy: round_robin
    load_assignment:
      cluster_name: service2
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: service2
                port_value: 8080
